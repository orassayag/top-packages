'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _router = require('./router');

var _router2 = _interopRequireDefault(_router);

var _molecule = require('./molecule');

var _molecule2 = _interopRequireDefault(_molecule);

let MoleculeRegistry = (function (_Router) {
  _inherits(MoleculeRegistry, _Router);

  function MoleculeRegistry() {
    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var _ref$molecules = _ref.molecules;
    let molecules = _ref$molecules === undefined ? {} : _ref$molecules;

    _classCallCheck(this, MoleculeRegistry);

    _get(Object.getPrototypeOf(MoleculeRegistry.prototype), 'constructor', this).call(this);
    this.molecules = molecules;
  }

  _createClass(MoleculeRegistry, [{
    key: 'use',
    value: function use(moleculeData) {
      var _ref2 = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

      var _ref2$root = _ref2.root;
      let root = _ref2$root === undefined ? false : _ref2$root;

      let molecule = new _molecule2['default'](moleculeData);

      if (this.contains(molecule.name)) {
        throw new Error('Molecule already registered with name \'' + molecule.name + '\'');
      }

      console.log('Registered module \'' + molecule.name + '\'');
      root && console.log('Registered as root module');
      for (let route of molecule.routes) {
        this.register(route);
        console.log('Registered route \'' + route + '\'');
      }

      if (molecule.register) {
        molecule.register();
      }

      this.molecules[molecule.name] = molecule;
    }
  }, {
    key: 'discard',
    value: function discard(name) {
      if (this.contains(name)) {
        if (this.molecules[name].unregister) {
          this.molecules[name].unregister();
        }
        delete this.molecules[name];
      } else {
        throw new Error('No molecule registered with name \'' + name + '\'');
      }
    }
  }, {
    key: 'contains',
    value: function contains(name) {
      return this.molecules[name] instanceof _molecule2['default'];
    }
  }]);

  return MoleculeRegistry;
})(_router2['default']);

exports['default'] = MoleculeRegistry;
module.exports = exports['default'];